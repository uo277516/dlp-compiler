@startuml Expressions
skinparam style strictuml
skinparam monochrome true


interface ASTNode {
    getLine(): int
    getColumn(): int
}

interface Expression

class IntLiteral {
    value: int
}

class RealLiteral {
    value: double
}

class charLiteral {
    value: char
}

class Variable {
    name: String
}

class Invocation {
    name: Variable
    arg: List<Expression>
}

class ArrayAccess {
    index: Expression
    array: Expression

}




class FileAccess {
    field: String
    expression: Expression
}



class Cast{
    typeToCast: Type
    expression: Expression
}

class UnaryMinus {
    expression: Expression
}

class UnaryNot {
    expression: Expression
}

class Arithmetic {
    operator: String
    right: Expression
    left: Expression
}
class Logical {

    right: Expression
    left: Expression

}

class Comparator {
    right: Expression
    left: Expression
}


Invocation o-- "0..n" Expression


Expression <|.. Invocation



ASTNode <|-- Expression
Expression <|.. IntLiteral
Expression <|.. RealLiteral
Expression <|.. charLiteral
Expression <|.. Variable
Expression <|.. Cast
Expression <|.. UnaryMinus
Expression <|.. UnaryNot

Expression <|.. FileAccess
Expression <|.. Arithmetic
Expression <|.. Logical

Expression <|.. Comparator

Expression <|.. ArrayAccess



@enduml
